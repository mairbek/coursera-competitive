# Copyright 2018 Google Inc.  All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cc_binary(
    name = "addition_and_subtraction",
    srcs = ["addition_and_subtraction.cc"],
)

cc_binary(
    name = "increment",
    srcs = ["increment.cc"],
)

cc_binary(
    name = "erasing_maximum",
    srcs = ["erasing_maximum.cc"],
)

cc_binary(
    name = "evaluation",
    srcs = ["evaluation.cc"],
)

cc_binary(
    name = "king",
    srcs = ["king.cc"],
)

cc_binary(
    name = "minimums_sum",
    srcs = ["minimums_sum.cc"],
)

cc_binary(
    name = "compare_sums",
    srcs = ["compare_sums.cc"],
)

cc_binary(
    name = "round_up",
    srcs = ["round_up.cc"],
)

cc_binary(
    name = "frequent_symbol",
    srcs = ["frequent_symbol.cc"],
)

cc_binary(
    name = "frequent_symbol_prefix",
    srcs = ["frequent_symbol_prefix.cc"],
)

cc_binary(
    name = "distance",
    srcs = ["distance.cc"],
)

cc_binary(
    name = "maximalsum",
    srcs = ["maximalsum.cc"],
)

cc_binary(
    name = "edit_distance",
    srcs = ["edit_distance.cc"],
)

cc_binary(
    name = "lis",
    srcs = ["lis.cc"],
)

cc_binary(
    name = "sum",
    srcs = ["sum.cc"],
)

cc_binary(
    name = "make_sorted",
    srcs = ["make_sorted.cc"],
)

cc_binary(
    name = "maximal_square",
    srcs = ["maximal_square.cc"],
)

cc_binary(
    name = "lcs",
    srcs = ["lcs.cc"],
)

cc_binary(
    name = "primes",
    srcs = ["primes.cc"],
)

cc_binary(
    name = "factorization",
    srcs = ["factorization.cc"],
)

cc_binary(
    name = "nearest_prime",
    srcs = ["nearest_prime.cc"],
)

cc_binary(
    name = "gcd",
    srcs = ["gcd.cc"],
)

cc_binary(
    name = "fraction",
    srcs = ["fraction.cc"],
)
